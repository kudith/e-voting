generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  kindeId   String   @unique
  username  String   @unique
  email     String   @unique
  createdAt DateTime @default(now())
}

model Voter {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  kindeId   String   @unique
  nim       String   @unique
  name      String
  email     String   @unique
  phone     String   
  fakultas  String
  jurusan   String
  angkatan  String
  status    String   @default("aktif")
  voted     Boolean  @default(false)
  createdAt DateTime @default(now())

  vote      Vote?
}

model Candidate {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  photo     String
  vision    String
  mission   String
  createdAt DateTime @default(now())

  votes     Vote[]
}

model Vote {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  voterId      String   @unique @db.ObjectId
  candidateId  String   @db.ObjectId
  hashVote     String
  timestamp    DateTime @default(now())

  voter        Voter?     @relation(fields: [voterId], references: [id])
  candidate    Candidate? @relation(fields: [candidateId], references: [id])
}

model MerkleTree {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  voteHash  String   @unique
  level     Int
  parentId  String?  @db.ObjectId

  parent    MerkleTree?   @relation("ParentChild", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  MerkleTree[]  @relation("ParentChild")
}
